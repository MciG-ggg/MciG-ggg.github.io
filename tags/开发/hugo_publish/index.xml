<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>开发/Hugo_publish on MciG</title><link>https://mcig-ggg.github.io/tags/%E5%BC%80%E5%8F%91/hugo_publish/</link><description>Recent content in 开发/Hugo_publish on MciG</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>MciG</copyright><lastBuildDate>Wed, 08 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://mcig-ggg.github.io/tags/%E5%BC%80%E5%8F%91/hugo_publish/index.xml" rel="self" type="application/rss+xml"/><item><title>hugo_publish</title><link>https://mcig-ggg.github.io/p/hugo_publish/</link><pubDate>Wed, 08 Oct 2025 00:00:00 +0000</pubDate><guid>https://mcig-ggg.github.io/p/hugo_publish/</guid><description>&lt;p&gt;&lt;strong&gt;1. 项目结构&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── hugo_publish_blog.py # 主程序
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── config.yaml # 配置文件
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── config.yaml.example # 配置文件模板
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├── requirements.txt # 依赖清单
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└── scripts/ # 功能模块
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ├── __init__.py
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ├── blog_processor.py # 博客处理核心类
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ├── front_matter.py # 文章前置数据处理
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ├── config_manager.py # 配置管理
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ├── image_processor.py # 图片处理
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; └── obsidian_image_handler.py # Obsidian图片转换
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;2. 核心功能和主要类&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BlogProcessor&lt;/code&gt; 类 (blog_processor.py)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;create_new_post()&lt;/code&gt; - 创建新的Hugo文章&lt;/li&gt;
&lt;li&gt;&lt;code&gt;process_markdown_files()&lt;/code&gt; - 处理Markdown文件转换&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list_published_markdowns()&lt;/code&gt; - 列出已发布的文章&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set_publish_false()&lt;/code&gt; - 设置文章为未发布状态&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unpublish_article()&lt;/code&gt; - 取消发布文章&lt;/li&gt;
&lt;li&gt;&lt;code&gt;preview_site()&lt;/code&gt; - 预览博客站点&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deploy_to_repos()&lt;/code&gt; - 部署到GitHub仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;FrontMatter&lt;/code&gt; 类 (front_matter.py)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管理文章前置数据&lt;/li&gt;
&lt;li&gt;处理标签和分类&lt;/li&gt;
&lt;li&gt;提供标准化的数据访问接口&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;config_manager.py: 配置管理&lt;/li&gt;
&lt;li&gt;obsidian_image_handler.py: 图片处理&lt;/li&gt;
&lt;li&gt;image_processor.py: 图片处理工具&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;3. 程序流程图&lt;/strong&gt;&lt;/p&gt;
&lt;div class="mermaid" id="mermaid-0"&gt;
graph TD
A[开始] --&gt; B{检查命令行参数}
B --&gt;|--preview| C[预览模式]
B --&gt;|--unpublish| D[取消发布]
B --&gt;|--republish| E[重新发布]
B --&gt;|默认发布| F[发布流程]
C --&gt; C1[启动Hugo服务器]
C1 --&gt; C2[打开预览页面]
D --&gt; D1[列出已发布文章]
D1 --&gt; D2[选择要取消的文章]
D2 --&gt; D3[更新文章状态]
D3 --&gt; D4[删除Hugo文件]
D4 --&gt; G[部署更新]
E --&gt; E1[找出已发布文章]
E1 --&gt; E2[取消所有发布]
E2 --&gt; E3[重新发布文章]
E3 --&gt; G
F --&gt; F1[处理Markdown文件]
F1 --&gt; F2[处理图片资源]
F2 --&gt; F3[创建Hugo文章]
F3 --&gt; G
G --&gt; G1[更新源码仓库]
G1 --&gt; G2[构建Hugo站点]
G2 --&gt; G3[部署到GitHub Pages]
G3 --&gt; H[结束]
&lt;/div&gt;
&lt;script&gt;
document.addEventListener('DOMContentLoaded', function() {
mermaid.initialize({
startOnLoad: true,
theme: 'default',
securityLevel: 'loose',
flowchart: {
htmlLabels: true,
curve: 'basis'
}
});
mermaid.init(undefined, "#mermaid-0");
});
&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;4. 文章处理流程&lt;/strong&gt;&lt;/p&gt;
&lt;div class="mermaid" id="mermaid-1"&gt;
sequenceDiagram
participant U as 用户
participant BP as BlogProcessor
participant FM as FrontMatter
participant IH as ImageHandler
participant H as Hugo
participant G as Git仓库
U-&gt;&gt;BP: 执行发布命令
BP-&gt;&gt;FM: 提取YAML和内容
FM-&gt;&gt;FM: 处理前置数据
BP-&gt;&gt;IH: 处理图片
IH-&gt;&gt;IH: 复制并重命名图片
BP-&gt;&gt;BP: 创建Hugo文章
BP-&gt;&gt;H: 构建站点
BP-&gt;&gt;G: 推送源码
BP-&gt;&gt;G: 部署页面
G--&gt;&gt;U: 返回部署结果
&lt;/div&gt;
&lt;script&gt;
document.addEventListener('DOMContentLoaded', function() {
mermaid.initialize({
startOnLoad: true,
theme: 'default',
securityLevel: 'loose',
flowchart: {
htmlLabels: true,
curve: 'basis'
}
});
mermaid.init(undefined, "#mermaid-1");
});
&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;5. 类关系图&lt;/strong&gt;&lt;/p&gt;
&lt;div class="mermaid" id="mermaid-2"&gt;
classDiagram
class BlogProcessor {
+source_dir: Path
+hugo_dir: Path
+create_new_post()
+process_markdown_files()
+list_published_markdowns()
+set_publish_false()
+unpublish_article()
+preview_site()
+deploy_to_repos()
}
class FrontMatter {
+data: dict
+title: str
+date: str
+tags: list
+categories: list
+draft: bool
+publish: bool
+to_dict()
+update()
}
class ImageHandler {
+process_obsidian_images()
+copy_image()
+update_links()
}
BlogProcessor --&gt; FrontMatter : 使用
BlogProcessor --&gt; ImageHandler : 使用
&lt;/div&gt;
&lt;script&gt;
document.addEventListener('DOMContentLoaded', function() {
mermaid.initialize({
startOnLoad: true,
theme: 'default',
securityLevel: 'loose',
flowchart: {
htmlLabels: true,
curve: 'basis'
}
});
mermaid.init(undefined, "#mermaid-2");
});
&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;6. 部署流程&lt;/strong&gt;&lt;/p&gt;
&lt;div class="mermaid" id="mermaid-3"&gt;
graph TD
A[开始部署] --&gt; B[更新源码仓库]
B --&gt; C[构建Hugo站点]
C --&gt; D[部署到GitHub Pages]
D --&gt; E[结束]
B --&gt; B1[Git操作]
B1 --&gt; B2[提交更改]
B2 --&gt; B3[推送到源码仓库]
C --&gt; C1[生成静态文件]
C1 --&gt; C2[优化资源]
D --&gt; D1[初始化Pages仓库]
D1 --&gt; D2[提交更改]
D2 --&gt; D3[强制推送到Pages]
&lt;/div&gt;
&lt;script&gt;
document.addEventListener('DOMContentLoaded', function() {
mermaid.initialize({
startOnLoad: true,
theme: 'default',
securityLevel: 'loose',
flowchart: {
htmlLabels: true,
curve: 'basis'
}
});
mermaid.init(undefined, "#mermaid-3");
});
&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;7. 配置管理流程&lt;/strong&gt;&lt;/p&gt;
&lt;div class="mermaid" id="mermaid-4"&gt;
graph LR
A[配置文件] --&gt;|读取| B[Config类]
B --&gt;|解析| C[配置字典]
C --&gt;|获取配置| D[程序模块]
D --&gt;|更新配置| B
B --&gt;|保存| A
&lt;/div&gt;
&lt;script&gt;
document.addEventListener('DOMContentLoaded', function() {
mermaid.initialize({
startOnLoad: true,
theme: 'default',
securityLevel: 'loose',
flowchart: {
htmlLabels: true,
curve: 'basis'
}
});
mermaid.init(undefined, "#mermaid-4");
});
&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;8. 主要功能说明&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;文章处理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持从Obsidian格式转换到Hugo格式&lt;/li&gt;
&lt;li&gt;自动处理图片资源&lt;/li&gt;
&lt;li&gt;维护标签和分类的映射关系&lt;/li&gt;
&lt;li&gt;支持草稿模式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;部署功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动更新源码仓库&lt;/li&gt;
&lt;li&gt;构建Hugo静态站点&lt;/li&gt;
&lt;li&gt;部署到GitHub Pages&lt;/li&gt;
&lt;li&gt;支持预览模式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图片处理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动复制和重命名图片&lt;/li&gt;
&lt;li&gt;更新文章中的图片链接&lt;/li&gt;
&lt;li&gt;支持多种图片格式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置管理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;灵活的配置系统&lt;/li&gt;
&lt;li&gt;支持多环境配置&lt;/li&gt;
&lt;li&gt;配置验证和错误处理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item></channel></rss>